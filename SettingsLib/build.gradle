plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'com.android.settingslib'
    compileSdk 35

    defaultConfig {
        minSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
//        jvmTarget = '21'
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.annotation
    implementation libs.preference
    implementation libs.window
    implementation libs.lottie
    implementation libs.javapoet
    // 添加注解处理器依赖
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    // 如果需要处理注解，你可能还需要添加其他依赖
    annotationProcessor 'com.google.auto.service:auto-service:1.0'
    compileOnly files('libs\\iconloader.jar')
    compileOnly files('libs\\WifiTrackerLibRes.jar')
    compileOnly files('libs\\core-icu4j.jar')
    compileOnly files('libs\\zxing-core-1.7.jar')
    compileOnly files('libs\\iconloader.jar')
    compileOnly files('libs\\SettingsLib.jar')
    compileOnly files('libs\\setupdesign.jar')
    compileOnly files('libs\\framework.jar')

}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        Set<File> fileSet = options.bootstrapClasspath.getFiles();
        List<File> newFileList = new ArrayList<>()
        newFileList.add(new File("libs/framework.jar"))
        newFileList.addAll(fileSet)
        options.bootstrapClasspath = files(newFileList.toArray())
    }
}